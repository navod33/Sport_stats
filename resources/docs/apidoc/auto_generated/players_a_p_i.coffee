# ******************************************************** #
#           AUTO-GENERATED. DO NOT EDIT THIS FILE.         #
# ******************************************************** #
#    Create your files in `resources/docs/apidoc/manual`   #
# ******************************************************** #
###
@apiVersion 1.0.0
@api {GET} api/v1/player-positions List Players Positions
@apiGroup PlayersAPI
@apiParam {String} page Page number
@apiUse default_headers
###
# ******************************************************** #
#           AUTO-GENERATED. DO NOT EDIT THIS FILE.         #
# ******************************************************** #
#    Create your files in `resources/docs/apidoc/manual`   #
# ******************************************************** #
###
@apiVersion 1.0.0
@api {GET} api/v1/players List Players
@apiGroup PlayersAPI
@apiParam {String} page Page number
@apiParam {Integer} team_id Team ID. Send with the request URL as `team_id=xxx`
@apiParam {Integer} [position_id] Position ID.
@apiUse default_headers
@apiSuccessExample {json} Success-Response / HTTP 200 OK
{
    "payload": {
        "current_page": 1,
        "data": [
            {
                "id": 15,
                "uuid": "ddb7a57f-d10e-44e7-b515-4a4a52108ea8",
                "team_id": 3,
                "image_uuid": null,
                "name": "Dr. Nico Toy",
                "email": "orice@yahoo.com",
                "positions": "AB,CD,EF",
                "metadata": null,
                "performance_notes": "Minima ex et unde rerum."
            },
            {
                "id": 14,
                "uuid": "f91c3d5b-c27d-4b0f-ae4a-85311c097e6c",
                "team_id": 3,
                "image_uuid": null,
                "name": "Adaline Collins",
                "email": "milford86@hotmail.com",
                "positions": "AB,CD,EF",
                "metadata": null,
                "performance_notes": "Excepturi ullam optio molestiae explicabo."
            },
            {
                "id": 13,
                "uuid": "ee850d5c-4c7b-418e-8454-3d5e1b0f23bb",
                "team_id": 3,
                "image_uuid": null,
                "name": "Hector Ferry DVM",
                "email": "muller.molly@yahoo.com.au",
                "positions": "AB,CD,EF",
                "metadata": null,
                "performance_notes": "Consectetur vero laboriosam quia deserunt assumenda placeat sed quo."
            },
            {
                "id": 12,
                "uuid": "d8fcee7f-7934-41cc-ac44-913fa241291a",
                "team_id": 3,
                "image_uuid": null,
                "name": "Taylor Torphy DVM",
                "email": "lkirlin@yahoo.com.au",
                "positions": "AB,CD,EF",
                "metadata": null,
                "performance_notes": "Expedita quae voluptatem nesciunt numquam."
            },
            {
                "id": 11,
                "uuid": "3b827982-a4b5-41e8-9615-a670cb4e7a4a",
                "team_id": 3,
                "image_uuid": null,
                "name": "Marlene Collins PhD",
                "email": "jaclyn07@mcclure.com",
                "positions": "AB,CD,EF",
                "metadata": null,
                "performance_notes": "Quibusdam expedita aspernatur quis."
            }
        ],
        "first_page_url": "http:\/\/boost.test\/api\/v1\/players?page=1",
        "from": 1,
        "last_page": 1,
        "last_page_url": "http:\/\/boost.test\/api\/v1\/players?page=1",
        "links": [
            {
                "url": null,
                "label": "&laquo; Previous",
                "active": false
            },
            {
                "url": "http:\/\/boost.test\/api\/v1\/players?page=1",
                "label": "1",
                "active": true
            },
            {
                "url": null,
                "label": "Next &raquo;",
                "active": false
            }
        ],
        "next_page_url": null,
        "path": "http:\/\/boost.test\/api\/v1\/players",
        "per_page": 50,
        "prev_page_url": null,
        "to": 5,
        "total": 5
    },
    "message": "",
    "result": true
}
###
# ******************************************************** #
#           AUTO-GENERATED. DO NOT EDIT THIS FILE.         #
# ******************************************************** #
#    Create your files in `resources/docs/apidoc/manual`   #
# ******************************************************** #
###
@apiVersion 1.0.0
@api {POST} api/v1/players Create Team and Players
@apiGroup PlayersAPI
@apiParam {String} team_name Team Name
@apiParam {String} [team_number] Team Number
@apiParam {Integer} [player_count] Team Player Count
@apiParam {String} [team_image_uuid] Team Image
@apiParam {String} players List of Players. Example 

                               [
                                    {
                                        "name":"wije", //player name required
                                        "positions":"1,2", //player positions as comma separated string - optional
                                        "image_uuid":"e41b5ecc-ca36-4648-abc2-eee71ba06275", //uuid of the image - optional
                                        "email":"abc.emedia@gmail.com", //email address - optional
                                    },
                                    {
                                        "name":"arjun",
                                        "positions":"1"
                                    }
                                ] 
@apiUse default_headers
###
# ******************************************************** #
#           AUTO-GENERATED. DO NOT EDIT THIS FILE.         #
# ******************************************************** #
#    Create your files in `resources/docs/apidoc/manual`   #
# ******************************************************** #
###
@apiVersion 1.0.0
@api {POST} api/v1/player Create Player
@apiGroup PlayersAPI
@apiParam {String} name Player name
@apiParam {String} [email] String
@apiParam {String} positions List of positions as a comma seperated list. The API does NOT validate the data. It is upto the client to store and fetch this field
@apiParam {String} [image_uuid] UUID for the team profile picture. Get a UUID from file upload endpoint
@apiParam {String} [team_id] Team ID
@apiUse default_headers
@apiSuccessExample {json} Success-Response / HTTP 200 OK
{
    "payload": {
        "name": "Frederique Ruecker",
        "email": "gabriella.connelly@hotmail.com",
        "team_id": 3,
        "uuid": "01f6f203-a53d-44f1-81dc-c272fc382482",
        "id": 34,
        "image_uuid": "fceaf68e-01dd-40a2-a5bb-2f4a4335c277",
        "owner": {
            "uuid": "c1e7d9ce-f32b-428f-94bd-0e20a2bb87b6",
            "last_name": null,
            "email": "apps+user@elegantmedia.com.au",
            "email_verified_at": null,
            "avatar_url": null,
            "timezone": "Australia\/Melbourne",
            "first_name": "Peter Parker (REGULAR USER)",
            "full_name": "Peter Parker (REGULAR USER)"
        },
        "image": {
            "key": "file_key_75e42dd1-9001-4016-8a47-38bd1ad520b5",
            "uuid": "fceaf68e-01dd-40a2-a5bb-2f4a4335c277",
            "original_filename": null,
            "file_url": "https:\/\/via.placeholder.com\/640x480.png\/005500?text=est",
            "permalink": "http:\/\/boost.test\/files\/fceaf68e-01dd-40a2-a5bb-2f4a4335c277"
        }
    },
    "message": "",
    "result": true
}
@apiErrorExample {json} Error-Response / HTTP 422 Unprocessable Content
{
    "message": "The team id field is required.",
    "payload": {
        "errors": {
            "team_id": [
                "The team id field is required."
            ]
        }
    },
    "result": false
}
###
# ******************************************************** #
#           AUTO-GENERATED. DO NOT EDIT THIS FILE.         #
# ******************************************************** #
#    Create your files in `resources/docs/apidoc/manual`   #
# ******************************************************** #
###
@apiVersion 1.0.0
@api {PUT} api/v1/players/{uuid} Update Player
@apiGroup PlayersAPI
@apiParam {String} uuid uuid of the Player to update
@apiParam {String} name Player name
@apiParam {String} [email] String
@apiParam {String} positions List of positions as a comma seperated list. The API does NOT validate the data. It is upto the client to store and fetch this field
@apiParam {String} [image_uuid] UUID for the team profile picture. Get a UUID from file upload endpoint
@apiUse default_headers
@apiSuccessExample {json} Success-Response / HTTP 200 OK
{
    "payload": {
        "name": "Freddie Hansen",
        "email": "dell62@hotmail.com",
        "uuid": "f541ba14-4fe1-4f42-b0fc-5c49626f64d9",
        "id": 35,
        "owner": {
            "uuid": "c1e7d9ce-f32b-428f-94bd-0e20a2bb87b6",
            "last_name": null,
            "email": "apps+user@elegantmedia.com.au",
            "email_verified_at": null,
            "avatar_url": null,
            "timezone": "Australia\/Melbourne",
            "first_name": "Peter Parker (REGULAR USER)",
            "full_name": "Peter Parker (REGULAR USER)"
        }
    },
    "message": "",
    "result": true
}
###
# ******************************************************** #
#           AUTO-GENERATED. DO NOT EDIT THIS FILE.         #
# ******************************************************** #
#    Create your files in `resources/docs/apidoc/manual`   #
# ******************************************************** #
###
@apiVersion 1.0.0
@api {DELETE} api/v1/players/{uuid} Delete Player
@apiGroup PlayersAPI
@apiParam {String} uuid uuid of the player to delete
@apiUse default_headers
@apiSuccessExample {json} Success-Response / HTTP 200 OK
{
    "payload": null,
    "message": "",
    "result": true
}
###
