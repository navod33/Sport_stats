{
    "swagger": "2.0",
    "info": {
        "title": "Boost App API",
        "version": "1.0.0.20220720"
    },
    "host": "boost.test",
    "schemes": [
        "http"
    ],
    "basePath": "\/api\/v1",
    "paths": {
        "\/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_post_register",
                "description": "This endpoint registers a user.If you need to update a profile image, upload the profile image in thebackground using `\/avatar` endpoint.",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    },
                    {
                        "name": "device_id",
                        "in": "formData",
                        "required": true,
                        "description": "Unique ID of the device",
                        "type": "string",
                        "example": "{{$guid}}"
                    },
                    {
                        "name": "device_type",
                        "in": "formData",
                        "required": true,
                        "description": "Type of the device `APPLE` or `ANDROID`",
                        "type": "string",
                        "example": "apple"
                    },
                    {
                        "name": "device_push_token",
                        "in": "formData",
                        "required": false,
                        "description": "Unique push token for the device",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "description": "Email address of user",
                        "type": "string",
                        "example": "{{$randomExampleEmail}}"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "description": "Password. Must be at least 8 characters.",
                        "type": "string",
                        "example": "{{login_user_pass}}"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "formData",
                        "required": true,
                        "description": "Confirm password. Must be at least 8 characters.",
                        "type": "string",
                        "example": "{{login_user_pass}}"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/AuthRegisterResponse"
                        },
                        "description": "AuthRegisterResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_post_login",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    },
                    {
                        "name": "device_id",
                        "in": "formData",
                        "required": true,
                        "description": "Unique ID of the device",
                        "type": "string",
                        "example": "{{$guid}}"
                    },
                    {
                        "name": "device_type",
                        "in": "formData",
                        "required": true,
                        "description": "Type of the device `APPLE` or `ANDROID`",
                        "type": "string",
                        "example": "apple"
                    },
                    {
                        "name": "device_push_token",
                        "in": "formData",
                        "required": false,
                        "description": "Unique push token for the device",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "description": "Email",
                        "type": "string",
                        "example": "{{test_user_email}}"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "description": "Password",
                        "type": "string",
                        "example": "{{login_user_pass}}"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/AuthLoginResponse"
                        },
                        "description": "AuthLoginResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/verify-email\/{code}": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Email Verification",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_post_email_verification",
                "description": "",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "description": "Verification Code",
                        "type": "integer",
                        "schema": {
                            "type": "integer",
                            "example": "{{1234}}"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/AuthEmailVerificationResponse"
                        },
                        "description": "AuthEmailVerificationResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/password\/email": {
            "post": {
                "tags": [
                    "ForgotPassword"
                ],
                "summary": "Reset Password",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "forgotpassword_post_reset_password",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "description": "Email",
                        "type": "string",
                        "example": "{{test_user_email}}"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/resend-code": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resend Verification Code",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_post_resend_verification_code",
                "description": "",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/guests": {
            "get": {
                "tags": [
                    "Guest"
                ],
                "summary": "Guest Settings",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "guest_get_guest_settings",
                "description": "Guest settings and parameters",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_get_logout",
                "description": "Logout the user from current device",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "My Profile",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_get_my_profile",
                "description": "Get currently logged in user's profile",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileMyProfileResponse"
                        },
                        "description": "ProfileMyProfileResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update My Profile",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_put_update_my_profile",
                "description": "",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "formData",
                        "required": true,
                        "description": "First name",
                        "type": "string",
                        "example": "{{$randomFirstName}}"
                    },
                    {
                        "name": "last_name",
                        "in": "formData",
                        "required": false,
                        "description": "Last name",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "description": "Email",
                        "type": "string",
                        "example": "{{test_user_email}}"
                    },
                    {
                        "name": "phone",
                        "in": "formData",
                        "required": false,
                        "description": "Phone",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileUpdateMyProfileResponse"
                        },
                        "description": "ProfileUpdateMyProfileResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/avatar": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update My Avatar",
                "consumes": [
                    "multipart\/form-data"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "profile_post_update_my_avatar",
                "description": "",
                "parameters": [
                    {
                        "name": "image",
                        "in": "formData",
                        "required": true,
                        "description": "Image",
                        "type": "file",
                        "example": "{{random_image_file}}"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ProfileUpdateMyAvatarResponse"
                        },
                        "description": "ProfileUpdateMyAvatarResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/password\/edit": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Update Password",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "auth_post_update_password",
                "description": "",
                "parameters": [
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "description": "Password",
                        "type": "string",
                        "example": "{{login_user_pass}}"
                    },
                    {
                        "name": "current_password",
                        "in": "formData",
                        "required": true,
                        "description": "Current password",
                        "type": "string",
                        "example": "{{login_user_pass}}"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "formData",
                        "required": true,
                        "description": "Password confirmation",
                        "type": "string",
                        "example": "{{login_user_pass}}"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/seasons": {
            "get": {
                "tags": [
                    "SeasonsAPI"
                ],
                "summary": "Seasons",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "seasonsapi_get_seasons",
                "description": "",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "description": "Search query",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "description": "Page number",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SeasonsAPISeasonsResponse"
                        },
                        "description": "SeasonsAPISeasonsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/files": {
            "post": {
                "tags": [
                    "FilesAPI"
                ],
                "summary": "Upload files",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "filesapi_post_upload_files",
                "description": "Use this endpoint to upload all files, including player images. You must use the `uuid` that gets returned, and use it to attach the file to other objects.",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "required": true,
                        "description": "Image file to upload. Upload as a form field.",
                        "type": "file"
                    },
                    {
                        "name": "allow_public_access",
                        "in": "formData",
                        "required": true,
                        "description": "post true if public access allowed, else false.",
                        "type": "boolean"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/FilesAPIUploadFilesResponse"
                        },
                        "description": "FilesAPIUploadFilesResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/teams": {
            "get": {
                "tags": [
                    "TeamsAPI"
                ],
                "summary": "List Teams",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "teamsapi_get_list_teams",
                "description": "Get a list of teams created by user",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "description": "Search query to filter by a name",
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "description": "Page number",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/TeamsAPIListTeamsResponse"
                        },
                        "description": "TeamsAPIListTeamsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "post": {
                "tags": [
                    "TeamsAPI"
                ],
                "summary": "Create Team",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "teamsapi_post_create_team",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "description": "Team name",
                        "type": "string"
                    },
                    {
                        "name": "team_number",
                        "in": "formData",
                        "required": false,
                        "description": "A number for the team. Can be any value",
                        "type": "string"
                    },
                    {
                        "name": "player_count",
                        "in": "formData",
                        "required": false,
                        "description": "Number of players for the team",
                        "type": "string"
                    },
                    {
                        "name": "image_uuid",
                        "in": "formData",
                        "required": false,
                        "description": "UUID for the team profile picture. Get a UUID from file upload endpoint",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/TeamsAPICreateTeamResponse"
                        },
                        "description": "TeamsAPICreateTeamResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/teams\/{uuid}": {
            "put": {
                "tags": [
                    "TeamsAPI"
                ],
                "summary": "Update Team",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "teamsapi_put_update_team",
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "uuid of the Team to update",
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "description": "Team name",
                        "type": "string"
                    },
                    {
                        "name": "team_number",
                        "in": "formData",
                        "required": false,
                        "description": "A number for the team. Can be any value",
                        "type": "string"
                    },
                    {
                        "name": "player_count",
                        "in": "formData",
                        "required": false,
                        "description": "Number of players for the team",
                        "type": "string"
                    },
                    {
                        "name": "image_uuid",
                        "in": "formData",
                        "required": false,
                        "description": "UUID for the team profile picture. Get a UUID from file upload endpoint",
                        "type": "string"
                    },
                    {
                        "name": "performance_notes",
                        "in": "formData",
                        "required": false,
                        "description": "Team performance notes",
                        "type": "string"
                    },
                    {
                        "name": "metadata",
                        "in": "formData",
                        "required": true,
                        "description": "An array of key value pairs to store any metadata",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/TeamsAPIUpdateTeamResponse"
                        },
                        "description": "TeamsAPIUpdateTeamResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "delete": {
                "tags": [
                    "TeamsAPI"
                ],
                "summary": "Delete Team",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "teamsapi_delete_delete_team",
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "uuid of the Team to delete",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/players": {
            "get": {
                "tags": [
                    "PlayersAPI"
                ],
                "summary": "List Players",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "playersapi_get_list_players",
                "description": "",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "description": "Page number",
                        "type": "string"
                    },
                    {
                        "name": "team_id",
                        "in": "query",
                        "required": true,
                        "description": "Team ID. Send with the request URL as `team_id=xxx`",
                        "type": "integer"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/PlayersAPIListPlayersResponse"
                        },
                        "description": "PlayersAPIListPlayersResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "post": {
                "tags": [
                    "PlayersAPI"
                ],
                "summary": "Create Player",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "playersapi_post_create_player",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "description": "Player name",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": false,
                        "description": "String",
                        "type": "string"
                    },
                    {
                        "name": "positions",
                        "in": "formData",
                        "required": true,
                        "description": "List of positions as a comma seperated list. The API does NOT validate the data. It is upto the client to store and fetch this field",
                        "type": "string"
                    },
                    {
                        "name": "image_uuid",
                        "in": "formData",
                        "required": false,
                        "description": "UUID for the team profile picture. Get a UUID from file upload endpoint",
                        "type": "string"
                    },
                    {
                        "name": "team_id",
                        "in": "formData",
                        "required": false,
                        "description": "Team ID",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/PlayersAPICreatePlayerResponse"
                        },
                        "description": "PlayersAPICreatePlayerResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/players\/{uuid}": {
            "put": {
                "tags": [
                    "PlayersAPI"
                ],
                "summary": "Update Player",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "playersapi_put_update_player",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "description": "Player name",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": false,
                        "description": "String",
                        "type": "string"
                    },
                    {
                        "name": "positions",
                        "in": "formData",
                        "required": true,
                        "description": "List of positions as a comma seperated list. The API does NOT validate the data. It is upto the client to store and fetch this field",
                        "type": "string"
                    },
                    {
                        "name": "image_uuid",
                        "in": "formData",
                        "required": false,
                        "description": "UUID for the team profile picture. Get a UUID from file upload endpoint",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/PlayersAPIUpdatePlayerResponse"
                        },
                        "description": "PlayersAPIUpdatePlayerResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "delete": {
                "tags": [
                    "PlayersAPI"
                ],
                "summary": "Delete Player",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "playersapi_delete_delete_player",
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "uuid of the player to delete",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/games": {
            "get": {
                "tags": [
                    "GamesAPI"
                ],
                "summary": "List Games",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "gamesapi_get_list_games",
                "description": "Get a list of games created by user. Pagination is supported. Played at time is in UTC. Convert to your timezone before using.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "description": "Page number",
                        "type": "string"
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "required": false,
                        "description": "Period can be `past`, `future`, `from_today`. The default is `from_today`.",
                        "type": "string"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "description": "Order can be `asc`, `desc`. The default is `asc`.",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/GamesAPIListGamesResponse"
                        },
                        "description": "GamesAPIListGamesResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "post": {
                "tags": [
                    "GamesAPI"
                ],
                "summary": "Create Game",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "gamesapi_post_create_game",
                "description": "",
                "parameters": [
                    {
                        "name": "tournament_name",
                        "in": "formData",
                        "required": true,
                        "description": "Tournament name",
                        "type": "string"
                    },
                    {
                        "name": "played_at",
                        "in": "formData",
                        "required": true,
                        "description": " 2022-07-01T13",
                        "type": "string"
                    },
                    {
                        "name": "location",
                        "in": "formData",
                        "required": false,
                        "description": " \"The Palace\"",
                        "type": "string"
                    },
                    {
                        "name": "season_id",
                        "in": "formData",
                        "required": false,
                        "description": "Season ID",
                        "type": "string"
                    },
                    {
                        "name": "team_a_id",
                        "in": "formData",
                        "required": true,
                        "description": "Team A ID",
                        "type": "string"
                    },
                    {
                        "name": "team_a_image_uuid",
                        "in": "formData",
                        "required": false,
                        "description": "UUID for the team A profile picture. Get a UUID from file upload endpoint. Only use this to override the default team A image.",
                        "type": "string"
                    },
                    {
                        "name": "team_b_image_uuid",
                        "in": "formData",
                        "required": false,
                        "description": "UUID for the team B profile picture. Get a UUID from file upload endpoint.",
                        "type": "string"
                    },
                    {
                        "name": "team_b_name",
                        "in": "formData",
                        "required": true,
                        "description": "String",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/GamesAPICreateGameResponse"
                        },
                        "description": "GamesAPICreateGameResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/games\/{uuid}": {
            "put": {
                "tags": [
                    "GamesAPI"
                ],
                "summary": "Update Game",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "gamesapi_put_update_game",
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "Game UUID",
                        "type": "string"
                    },
                    {
                        "name": "tournament_name",
                        "in": "formData",
                        "required": true,
                        "description": "Tournament name",
                        "type": "string"
                    },
                    {
                        "name": "played_at",
                        "in": "formData",
                        "required": true,
                        "description": " 2022-07-01T13",
                        "type": "string"
                    },
                    {
                        "name": "location",
                        "in": "formData",
                        "required": false,
                        "description": " \"The Palace\"",
                        "type": "string"
                    },
                    {
                        "name": "season_id",
                        "in": "formData",
                        "required": false,
                        "description": "Season ID",
                        "type": "string"
                    },
                    {
                        "name": "team_a_id",
                        "in": "formData",
                        "required": true,
                        "description": "Team A ID",
                        "type": "string"
                    },
                    {
                        "name": "team_a_image_uuid",
                        "in": "formData",
                        "required": false,
                        "description": "UUID for the team A profile picture. Get a UUID from file upload endpoint. Only use this to override the default team A image.",
                        "type": "string"
                    },
                    {
                        "name": "team_b_image_uuid",
                        "in": "formData",
                        "required": false,
                        "description": "UUID for the team B profile picture. Get a UUID from file upload endpoint.",
                        "type": "string"
                    },
                    {
                        "name": "team_b_name",
                        "in": "formData",
                        "required": true,
                        "description": "String",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/GamesAPIUpdateGameResponse"
                        },
                        "description": "GamesAPIUpdateGameResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "delete": {
                "tags": [
                    "GamesAPI"
                ],
                "summary": "Delete Game",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "gamesapi_delete_delete_game",
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "uuid of the Game to delete",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/games\/{gameUuid}\/scores": {
            "get": {
                "tags": [
                    "ScoresAPI"
                ],
                "summary": "List Scores per Game",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "scoresapi_get_list_scores_per_game",
                "description": "Get a list of scores for a game. Pagination is supported.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "description": "Page number",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ScoresAPIListScoresPerGameResponse"
                        },
                        "description": "ScoresAPIListScoresPerGameResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            },
            "post": {
                "tags": [
                    "ScoresAPI"
                ],
                "summary": "Create Score",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "scoresapi_post_create_score",
                "description": "Create a new score for a player. Each record will be unique by `gameUuid`, `player_id`, `position` and `time_segment`. If the record already exists, it will be updated. If a score record must be deleted, you should send a null score value or use delete endpoint.",
                "parameters": [
                    {
                        "name": "gameUuid",
                        "in": "path",
                        "required": true,
                        "description": "Game UUID",
                        "type": "string"
                    },
                    {
                        "name": "player_id",
                        "in": "formData",
                        "required": true,
                        "description": "Player ID",
                        "type": "string"
                    },
                    {
                        "name": "position",
                        "in": "formData",
                        "required": true,
                        "description": "Position of the player in the game",
                        "type": "string"
                    },
                    {
                        "name": "time_segment",
                        "in": "formData",
                        "required": true,
                        "description": "Time segment on game. Examples `Quarter 1`, `Quarter 2`, `Quarter 3`, `Quarter 4`, `Overtime`, `Shootout`",
                        "type": "string"
                    },
                    {
                        "name": "score",
                        "in": "formData",
                        "required": true,
                        "description": "To delete a record, send a score of `null`. ",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/ScoresAPICreateScoreResponse"
                        },
                        "description": "ScoresAPICreateScoreResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/games\/{gameUuid}\/scores\/{uuid}": {
            "delete": {
                "tags": [
                    "ScoresAPI"
                ],
                "summary": "Delete Score",
                "consumes": [
                    "application\/json",
                    "application\/x-www-form-urlencoded"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "scoresapi_delete_delete_score",
                "description": "Delete a score record.",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "description": "Score UUID",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get Settings",
                "consumes": [
                    "application\/json"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "settings_get_get_settings",
                "description": "Returns all app settings. Each setting value is identified by the respective key.",
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "`application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SettingsGetSettingsResponse"
                        },
                        "description": "SettingsGetSettingsResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        },
        "\/settings\/{key}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get Setting",
                "consumes": [
                    "application\/json"
                ],
                "produces": [
                    "application\/json"
                ],
                "operationId": "settings_get_get_setting",
                "description": "Returns the value of a single app setting requested by key.",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "description": "Key of the setting",
                        "type": "string"
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "description": "Set to `application\/json`",
                        "type": "string",
                        "schema": {
                            "type": "string",
                            "example": "application\/json"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    },
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#\/definitions\/SuccessResponse"
                        },
                        "description": "SuccessResponse"
                    },
                    "401": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorUnauthorized"
                        },
                        "description": "Authentication failed"
                    },
                    "403": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiErrorAccessDenied"
                        },
                        "description": "Access denied"
                    },
                    "422": {
                        "schema": {
                            "$ref": "#\/definitions\/ApiError"
                        },
                        "description": "Generic API error. Check `message` for more information."
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header",
            "description": "API Key for application"
        },
        "accessToken": {
            "type": "apiKey",
            "name": "x-access-token",
            "in": "header",
            "description": "Unique user authentication token"
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "avatar_url": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "email_verified_at": {
                    "type": "string"
                },
                "access_token": {
                    "type": "string"
                }
            }
        },
        "Device": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "device_push_token": {
                    "type": "string"
                },
                "access_token": {
                    "type": "string"
                },
                "access_token_expires_at": {
                    "type": "string"
                },
                "latest_ip_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Season": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "File": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "original_filename": {
                    "type": "string"
                },
                "public_url": {
                    "type": "string"
                },
                "file_url": {
                    "type": "string"
                },
                "permalink": {
                    "type": "string"
                }
            }
        },
        "Team": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "image_uuid": {
                    "type": "string"
                },
                "player_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "team_number": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "performance_notes": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#\/definitions\/File"
                }
            }
        },
        "Player": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "team_id": {
                    "type": "string"
                },
                "image_uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "positions": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "performance_notes": {
                    "type": "string"
                }
            }
        },
        "Game": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "season_id": {
                    "type": "string"
                },
                "team_a_id": {
                    "type": "string"
                },
                "team_b_id": {
                    "type": "string"
                },
                "team_b_name": {
                    "type": "string"
                },
                "tournament_name": {
                    "type": "string"
                },
                "played_at": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "team_a_image_uuid": {
                    "type": "string"
                },
                "team_b_image_uuid": {
                    "type": "string"
                }
            }
        },
        "Score": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "game_id": {
                    "type": "string"
                },
                "time_segment": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "player_id": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "Setting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "object"
                }
            }
        },
        "Paginator": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "number"
                },
                "per_page": {
                    "type": "number",
                    "default": 50
                },
                "from": {
                    "type": "number"
                },
                "to": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                },
                "last_page": {
                    "type": "number"
                }
            }
        },
        "ApiErrorUnauthorized": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "object"
                }
            }
        },
        "ApiErrorAccessDenied": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "object"
                }
            }
        },
        "ApiError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "object"
                }
            }
        },
        "AuthRegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "AuthLoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "AuthEmailVerificationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "ProfileMyProfileResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "ProfileUpdateMyProfileResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "ProfileUpdateMyAvatarResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/User"
                }
            }
        },
        "SeasonsAPISeasonsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Season"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "FilesAPIUploadFilesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/File"
                }
            }
        },
        "TeamsAPIListTeamsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Team"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "TeamsAPICreateTeamResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Team"
                }
            }
        },
        "TeamsAPIUpdateTeamResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Team"
                }
            }
        },
        "PlayersAPIListPlayersResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Player"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "PlayersAPICreatePlayerResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Player"
                }
            }
        },
        "PlayersAPIUpdatePlayerResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Player"
                }
            }
        },
        "GamesAPIListGamesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Game"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "GamesAPICreateGameResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Team"
                }
            }
        },
        "GamesAPIUpdateGameResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Team"
                }
            }
        },
        "ScoresAPIListScoresPerGameResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Score"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        },
        "ScoresAPICreateScoreResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "$ref": "#\/definitions\/Score"
                }
            }
        },
        "SettingsGetSettingsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "result": {
                    "type": "boolean",
                    "default": true
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#\/definitions\/Setting"
                    }
                },
                "paginator": {
                    "$ref": "#\/definitions\/Paginator"
                }
            }
        }
    }
}